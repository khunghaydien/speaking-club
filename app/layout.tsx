import type { Metadata } from "next";
import localFont from "next/font/local";
import "./globals.css";
import MUIProvider from "@/providers/mui-provider";
import { ThemeProvider } from "next-themes";
import { getServerSession } from "next-auth/next";
import SessionProvider from "@/providers/session-provider";
import { NextIntlClientProvider } from "next-intl";
import { getLocale, getMessages } from "next-intl/server";
import ClientProvider from "@/providers/apollo-provider";
import StoreProvider from "@/providers/store-provider";

const geistSans = localFont({
  src: "./fonts/GeistVF.woff",
  variable: "--font-geist-sans",
  weight: "100 900",
});

const geistMono = localFont({
  src: "./fonts/GeistMonoVF.woff",
  variable: "--font-geist-mono",
  weight: "100 900",
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default async function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const session = await getServerSession();
  const locale = await getLocale();
  const messages = await getMessages();
  return (
    <html lang={locale} suppressHydrationWarning={true}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased bg-muted-foreground/10 text-black dark:text-white`}
      >
        <ClientProvider>
          <StoreProvider>
            <SessionProvider session={session}>
              <ThemeProvider
                attribute="class"
                defaultTheme="dark"
                enableSystem
                disableTransitionOnChange
              >
                <MUIProvider>
                  <NextIntlClientProvider messages={messages}>
                    {children}
                  </NextIntlClientProvider>
                </MUIProvider>
              </ThemeProvider>
            </SessionProvider>
          </StoreProvider>
        </ClientProvider>
      </body>
    </html>
  );
}
